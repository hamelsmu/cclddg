# AUTOGENERATED! DO NOT EDIT! File to edit: 02_Datasets.ipynb (unless otherwise specified).

__all__ = ['tensor_to_image', 'CelebADataset', 'get_celebA_dl', 'get_cc12m_dl']

# Cell
from PIL import Image
import numpy as np
def tensor_to_image(t):
    return Image.fromarray(np.array(((t.detach().cpu().squeeze().permute(1, 2, 0)+1)/2).clip(0, 1)*255).astype(np.uint8))

# Cell
from datasets import load_dataset
from torchvision import transforms as T
from torch.utils.data import Dataset, DataLoader

class CelebADataset(Dataset):
    def __init__(self, img_size=128):
        self.dataset = load_dataset('huggan/CelebA-faces')['train']
        self.preprocess = T.Compose([T.ToTensor(),T.Resize(img_size), T.CenterCrop(img_size)])
    def __len__(self):
        return len(self.dataset)
    def __getitem__(self, idx):
        x = self.dataset[idx]
        return (self.preprocess(x['image']), 'A photo of a face')

def get_celebA_dl(img_size=128, batch_size=32):
    dataset = CelebADataset(img_size)
    dl = DataLoader(dataset, batch_size=batch_size)
    return dl

# Cell
import webdataset as wds
import torch
def get_cc12m_dl(img_size=128, batch_size=32,url=None, num_workers=8):
    if url == None:
        url = 'https://huggingface.co/datasets/laion/conceptual-captions-12m-webdataset/resolve/main/data/{00000..01200}.tar'
    preproc = T.Compose([T.ToTensor(),T.Resize(img_size), T.CenterCrop(img_size)])
    dataset = (
          wds.WebDataset(url)
          .shuffle(1000)
          .decode("pil")
          .rename(image="jpg;png", text="txt")
          .map_dict(image=preproc)
          .to_tuple("image", "text")
    )
    dl = torch.utils.data.DataLoader(dataset, batch_size=batch_size, num_workers=num_workers)
    return dl